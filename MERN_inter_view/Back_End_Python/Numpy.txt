1) What is Numpy?
Ans: NumPy is a general-purpose array-processing package. It provides a high-performance
 multidimensional array object, and tools for working with these arrays. It is the fundamental 
package for scientific computing with Python. … A powerful N-dimensional 
array object. Sophisticated (broadcasting) functions.


2 List the steps to create a 1D array and 2D array?

ANs:one-dimensional array is created as follows: 

num=[1,2,3]

num = np.array(num)

print(“1d array : “,num) 
|||||||||||
num2=[[1,2,3],[4,5,6]]

num2 = np.array(num2)

print(“\n2d array : “,num2)

Question 8: How do you create a 3D array?

A three-dimensional array is created as follows: 

num3=[[[1,2,3],[4,5,6],[7,8,9]]]

num3 = np.array(num3)

print(“\n3d array : “,num3)

Question 10: How can you identify the datatype of a given NumPy array?



Question 12. How do you check for an empty (zero Element) array?

The preferable way to check for a zero element is the size attribute. This is because: 

>>> a = NumPy.zeros((1,0))

>>> a.size


4. Why is NumPy Array good compared to Python Lists?

NumPy is better than Python Lists for two primary reasons:

NumPy Array is static and has a fixed size while creating codes. In other cases, Python Lists are dynamic and can grow dynamically.
NumPy Array can perform vectorised operations and other advanced calculations, but Python Lists can't
 do these even after  having a large set of functions.


7. What does bincount() function?

s = np.array([0, 2, 3, 0, 3, 3, 3, 0, 0, 4, 2, 1, 7, 5])

print(np.bincount(s))


15. Explain the data types supported by  NumPy.

numpy.bool_ : bool
numpy.byte : signed char
numpy.ubyte : unsigned char
numpy.short : short
numpy.ushort : unsigned short
numpy.intc : int
numpy.uintc : unsigned int
numpy.int_ : long
numpy.uint : unsigned long
numpy.longlong :  long long
numpy.ulonglong : unsigned long long
numpy.half / numpy.float16 : Half precision float
numpy.single : float
numpy.double : double
numpy.longdouble : long double
numpy.csingle : float complex
numpy.cdouble : double complex
numpy.clongdouble : long double complex


 

20. What is the difference between indexing and slicing in NumPy?